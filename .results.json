{
  "stats": {
    "suites": 5,
    "tests": 13,
    "passes": 9,
    "pending": 0,
    "failures": 4,
    "start": "2022-07-04T14:45:09.061Z",
    "end": "2022-07-04T14:45:09.538Z",
    "duration": 477
  },
  "tests": [
    {
      "title": "returns a distance in blocks",
      "fullTitle": "index.js distanceFromHqInBlocks() returns a distance in blocks",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns a distance in blocks",
      "fullTitle": "index.js distanceFromHqInBlocks() returns a distance in blocks",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "calculates distances below 42nd street",
      "fullTitle": "index.js distanceFromHqInBlocks() calculates distances below 42nd street",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns a distance in feet",
      "fullTitle": "index.js distanceFromHqInFeet() returns a distance in feet",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns a distance in feet",
      "fullTitle": "index.js distanceFromHqInFeet() returns a distance in feet",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "calculates distances below 42nd street",
      "fullTitle": "index.js distanceFromHqInFeet() calculates distances below 42nd street",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns the distance travelled in feet",
      "fullTitle": "index.js distanceTravelledInFeet() returns the distance travelled in feet",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns a distance in feet",
      "fullTitle": "index.js distanceTravelledInFeet() returns a distance in feet",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns distance when destination is below distance",
      "fullTitle": "index.js distanceTravelledInFeet() returns distance when destination is below distance",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "gives customers a free sample",
      "fullTitle": "index.js calculatesFarePrice(start, destination) gives customers a free sample",
      "duration": 2,
      "currentRetry": 0,
      "err": {
        "message": "expected 'gives customers a free sample' to equal 0",
        "showDiff": true,
        "actual": "gives customers a free sample",
        "expected": 0,
        "stack": "AssertionError: expected 'gives customers a free sample' to equal 0\n    at Context.<anonymous> (test/indexTest.js:47:46)\n    at processImmediate (node:internal/timers:466:21)"
      }
    },
    {
      "title": "charges 2 cents per foot when total feet travelled is between 400 and 2000 (remember the first 400 feet are free!)",
      "fullTitle": "index.js calculatesFarePrice(start, destination) charges 2 cents per foot when total feet travelled is between 400 and 2000 (remember the first 400 feet are free!)",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "expected 'gives customers a free sample' to equal 2.56",
        "showDiff": true,
        "actual": "gives customers a free sample",
        "expected": 2.56,
        "stack": "AssertionError: expected 'gives customers a free sample' to equal 2.56\n    at Context.<anonymous> (test/indexTest.js:52:46)\n    at processImmediate (node:internal/timers:466:21)"
      }
    },
    {
      "title": "charges 25 dollars for a distance over 2000 feet",
      "fullTitle": "index.js calculatesFarePrice(start, destination) charges 25 dollars for a distance over 2000 feet",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "message": "expected 'gives customers a free sample' to equal 25",
        "showDiff": true,
        "actual": "gives customers a free sample",
        "expected": 25,
        "stack": "AssertionError: expected 'gives customers a free sample' to equal 25\n    at Context.<anonymous> (test/indexTest.js:56:46)\n    at processImmediate (node:internal/timers:466:21)"
      }
    },
    {
      "title": "does not allow rides over 2500 feet",
      "fullTitle": "index.js calculatesFarePrice(start, destination) does not allow rides over 2500 feet",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "message": "expected 'gives customers a free sample' to equal 'cannot travel that far'",
        "showDiff": true,
        "actual": "gives customers a free sample",
        "expected": "cannot travel that far",
        "stack": "AssertionError: expected 'gives customers a free sample' to equal 'cannot travel that far'\n    at Context.<anonymous> (test/indexTest.js:60:46)\n    at processImmediate (node:internal/timers:466:21)"
      }
    }
  ],
  "pending": [],
  "failures": [
    {
      "title": "gives customers a free sample",
      "fullTitle": "index.js calculatesFarePrice(start, destination) gives customers a free sample",
      "duration": 2,
      "currentRetry": 0,
      "err": {
        "message": "expected 'gives customers a free sample' to equal 0",
        "showDiff": true,
        "actual": "gives customers a free sample",
        "expected": 0,
        "stack": "AssertionError: expected 'gives customers a free sample' to equal 0\n    at Context.<anonymous> (test/indexTest.js:47:46)\n    at processImmediate (node:internal/timers:466:21)"
      }
    },
    {
      "title": "charges 2 cents per foot when total feet travelled is between 400 and 2000 (remember the first 400 feet are free!)",
      "fullTitle": "index.js calculatesFarePrice(start, destination) charges 2 cents per foot when total feet travelled is between 400 and 2000 (remember the first 400 feet are free!)",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "expected 'gives customers a free sample' to equal 2.56",
        "showDiff": true,
        "actual": "gives customers a free sample",
        "expected": 2.56,
        "stack": "AssertionError: expected 'gives customers a free sample' to equal 2.56\n    at Context.<anonymous> (test/indexTest.js:52:46)\n    at processImmediate (node:internal/timers:466:21)"
      }
    },
    {
      "title": "charges 25 dollars for a distance over 2000 feet",
      "fullTitle": "index.js calculatesFarePrice(start, destination) charges 25 dollars for a distance over 2000 feet",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "message": "expected 'gives customers a free sample' to equal 25",
        "showDiff": true,
        "actual": "gives customers a free sample",
        "expected": 25,
        "stack": "AssertionError: expected 'gives customers a free sample' to equal 25\n    at Context.<anonymous> (test/indexTest.js:56:46)\n    at processImmediate (node:internal/timers:466:21)"
      }
    },
    {
      "title": "does not allow rides over 2500 feet",
      "fullTitle": "index.js calculatesFarePrice(start, destination) does not allow rides over 2500 feet",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "message": "expected 'gives customers a free sample' to equal 'cannot travel that far'",
        "showDiff": true,
        "actual": "gives customers a free sample",
        "expected": "cannot travel that far",
        "stack": "AssertionError: expected 'gives customers a free sample' to equal 'cannot travel that far'\n    at Context.<anonymous> (test/indexTest.js:60:46)\n    at processImmediate (node:internal/timers:466:21)"
      }
    }
  ],
  "passes": [
    {
      "title": "returns a distance in blocks",
      "fullTitle": "index.js distanceFromHqInBlocks() returns a distance in blocks",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns a distance in blocks",
      "fullTitle": "index.js distanceFromHqInBlocks() returns a distance in blocks",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "calculates distances below 42nd street",
      "fullTitle": "index.js distanceFromHqInBlocks() calculates distances below 42nd street",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns a distance in feet",
      "fullTitle": "index.js distanceFromHqInFeet() returns a distance in feet",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns a distance in feet",
      "fullTitle": "index.js distanceFromHqInFeet() returns a distance in feet",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "calculates distances below 42nd street",
      "fullTitle": "index.js distanceFromHqInFeet() calculates distances below 42nd street",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns the distance travelled in feet",
      "fullTitle": "index.js distanceTravelledInFeet() returns the distance travelled in feet",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns a distance in feet",
      "fullTitle": "index.js distanceTravelledInFeet() returns a distance in feet",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns distance when destination is below distance",
      "fullTitle": "index.js distanceTravelledInFeet() returns distance when destination is below distance",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    }
  ]
}